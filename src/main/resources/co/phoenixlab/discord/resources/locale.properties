# Bot localization strings

# Response to @mention
message.mention.response                            = U wot <@{0|%s}>?

# Help Command
commands.help.command                               = help
commands.help.help                                  = Lists available commands
commands.help.response.head                         = __**{0|%d} Available {0|(EN_PLURAL;Commands),(ONE;Command)}**__\n
commands.help.response.entry                        = **{0|%s}{1|%s}** - {2|%s}

####### General commands #######
# Common
commands.common.user_not_found                      = Unable to find user. Try typing their name EXACTLY or @mention them instead
commands.common.self_reference                      = {0|%s}, you can omit your name when using this command to refer to yourself
commands.common.support_mention_front_match         = Supports @mention and partial front matching.

# Admin
commands.general.admin.command                      = sudo
commands.general.admin.help                         = Administrative commands
commands.general.admin.response.reject              = {0|%s} is not in the sudoers file. This incident will be reported

# List admins
commands.general.admins.command                     = admins
commands.general.admins.help                        = List bot administrators
commands.general.admins.response.none               = None
commands.general.admins.response.format             = Admins: {0|%s}

# Info
commands.general.info.command                       = info
commands.general.info.help                          = Display information about the caller or the provided name, if present. [commands.common.support_mention_front_match]
commands.general.info.response.not_found            = [commands.common.user_not_found]
commands.general.info.response.format               = **Username:** {0|%s}\n**ID:** {1|%s}\n{2|%s}{3|%s}**Avatar:** {4|%s}
commands.general.info.response.no_avatar            = [commands.general.avatar.response.no_avatar]
commands.general.info.response.blacklisted          = **Blacklisted**\n
commands.general.info.response.admin                = **Bot Administrator**\n

# Avatar
commands.general.avatar.command                     = avatar
commands.general.avatar.help                        = Display the avatar of the caller or the provided name, if present. [commands.common.support_mention_front_match] Use `[commands.general.avatar.subcommand.server]` for the current server's avatar
commands.general.avatar.subcommand.server           = server
commands.general.avatar.response.not_found          = [commands.common.user_not_found]
commands.general.avatar.response.no_avatar          = No avatar
commands.general.avatar.response.format             = {0|%s}'s avatar: {1|%s}
commands.general.avatar.response.server.not_member  = Bot is not a member of that server
commands.general.avatar.response.server.private     = You cannot use the `[commands.general.avatar.subcommand.server]` option in a private message
commands.general.avatar.response.server.format.none = {0|%s} server has no avatar set
commands.general.avatar.response.server.format      = {0|%s} server avatar: {1|%s}

# Version
commands.general.version.command                    = version
commands.general.version.help                       = Display version information

# Stats
commands.general.stats.command                      = stats
commands.general.stats.help                         = Display bot statistics
commands.general.stats.response.format              = __**Bot Statistics**__\n**MainCommandDispatcher**\nCmdHandleTime: {0|%s} ms\nCmdOKHandleTime: {1|%s} ms\nReceivedCommands: {2|%,d} T/{3|%,d} OK/{4|%,d} KO\n**WebSocketClient**\nMsgHandleTime: {5|%s} ms\nMsgCount: {6|%,d}\nKeepAliveCount: {7|%,d}\nErrorCount: {8|%,d}

# Roles
commands.general.roles.command                      = roles
commands.general.roles.help                         = Display a user's roles. [commands.common.support_mention_front_match]
commands.general.roles.response.not_found           = [commands.common.user_not_found]
commands.general.roles.response.format              = {0|%s}'s roles: {1|%s}
commands.general.roles.response.role.format         = `{0|%s} ({1|%s})
commands.general.roles.response.no_roles            = No Custom Roles

####### Admin Commands #######

# Start bot
commands.admin.start.command                        = start
commands.admin.start.help                           = Start the bot
commands.admin.start.response.ok                    = Bot started
commands.admin.start.response.already_started       = Bot is already running

# Stop bot
commands.admin.stop.command                         = stop
commands.admin.stop.help                            = Stop the bot
commands.admin.stop.response.ok                     = Bot stopped
commands.admin.stop.response.already_stopped        = Bot is already stopped

# Status
commands.admin.status.command                       = status
commands.admin.status.help                          = Show bot status information. Specify `[commands.admin.status.subcommand.servers]` to show what servers the bot is active on
commands.admin.status.subcommand.servers            = server
commands.admin.status.response.format               = **Status:** {0|%s}\n**Servers:** {1|%s}\n**Uptime:** {2|%s}\n**Heap:** `{3|%s}`\n**Load:** {4|%.4f}\n**Hamster Wheels in use:** {5|%s}
commands.admin.status.response.state.running        = Running
commands.admin.status.response.state.stopped        = Stopped
commands.admin.status.response.servers.entry        = `{0|%s}`: {1|%s}
commands.admin.status.response.servers.format       = {0|%d} servers:\n{1|%s}
commands.admin.status.response.memory.format        = {0|%,d}MB used {1|%,d}MB committed {2|%,d}MB max

# Kill
commands.admin.kill.command                         = kill
commands.admin.kill.help                            = Kill the bot process
commands.admin.kill.response                        = Sudoku time, bye

# Restart
commands.admin.restart.command                      = restart
commands.admin.restart.help                         = Restart the bot process
commands.admin.restart.response                     = Brb quick sudoku game

# Blacklist
commands.admin.blacklist.command                    = blacklist
commands.admin.blacklist.help                       = Print blacklisted users, or add the specified user to the blacklist. [commands.common.support_mention_front_match]
commands.admin.blacklist.response.not_found         = Unable to find user
commands.admin.blacklist.response.admin             = Cannot blacklist a bot administrator
commands.admin.blacklist.response.format            = `{0|%s}` has been blacklisted
commands.admin.blacklist.response.list.none         = None
commands.admin.blacklist.response.list.format       = Blacklisted users: {0|%s}

# Pardon
commands.admin.pardon.command                       = pardon
commands.admin.pardon.help                          = Pardons the specified user from the blacklist. [commands.common.support_mention_front_match]
commands.admin.pardon.response.no_user              = Please specify a username
commands.admin.pardon.response.not_found            = Unable to find user
commands.admin.pardon.response.format               = `{0|%s}` has been pardoned
commands.admin.pardon.response.not_blacklisted      = `{0|%s}` was not blacklisted

# Join
commands.admin.join.command                         = join
commands.admin.join.help                            = Joins the server using the specified discord.gg invite link
commands.admin.join.response.invalid                = Invalid invite link
commands.admin.join.response.http_error             = Unable to join server: HTTP {0|%d}
commands.admin.join.response.network_error          = Unable to join server: Network error

# Telegram
commands.admin.telegram.command                     = telegram
commands.admin.telegram.help                        = Sends a message to the specified channel
commands.admin.telegram.response.invalid            = Please specify a channelID and message: telegram CHANNEL_ID MESSAGE

# Raw
commands.admin.raw.command                          = raw
commands.admin.raw.help                             = Sends a message specified using JSON. Specify cid=CHANNEL_ID first to send to that channel
commands.admin.raw.response.invalid                 = Invalid JSON

# Prefix
commands.admin.prefix.command                       = prefix
commands.admin.prefix.help                          = Get or set the main command prefix
commands.admin.prefix.response.get                  = Command prefix: `{0|%d}`
commands.admin.prefix.response.set                  = Command prefix set to: `{0|%d}`

