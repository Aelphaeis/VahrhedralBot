# Bot localization strings

# Response to @mention
message.mention.response                            = U wot @{0|%s}?

# Join message
message.on_join.response                            = Hi! I'm `{0|%s}`. I am a bot created by Vahrheit, you can find \
  my source code or contact my owner here https://github.com/vincentzhang96/VahrhedralBot . Use `.help` for commands

# New member message
message.new_member.response                         = `{0|%s}#{2|%s}` ({1|%s}) joined the server  ({3|%s})
# Member quit message
message.member_quit.response                        = `{0|%s}#{2|%s}` ({1|%s}) left the server ({3|%s})

# Got private messaged an invite
message.private.invite                              = Sorry, in order to add this bot to your server, you must contact \
  the bot owner, Vahrheit. Official Discord bots are unable to join using normal invite links.

# Got private messaged a ~/!/- command
message.private.misc                                = This bot uses `{0|%s}` commands. Please use \
  `{0|%s}[commands.help.command]` for help.

commands.arguments                                  = Arguments: `{0|%s}`

# Help Command
commands.help.command                               = help
commands.help.help                                  = Lists available commands. Use `[commands.help.command] \
  <command>` for more details about `<command>`
commands.help.detailed_help                         = Use the command with no arguments to list available commands. \
  Use `[commands.help.command] <command>` for more details about `<command>`
commands.help.arguments                             = \\\\\\[<command>]
commands.help.response.head                         = __**{0|%d} Available {0|(EN_PLURAL;Commands),(ONE;Command)}**__\n
commands.help.response.entry                        = **{0|%s}{1|%s}** - {2|%s}
commands.help.response.detailed                     = `{0|%s}`** Command**\n{1|%s}\n__Arguments:__ `{2|%s}`
commands.help.response.detailed.examples            = `{0|%s}`** Command**\n{1|%s}\n__Arguments:__ `{2|%s}`\
  \n__Examples:__ {3|%s}
commands.help.response.not_found                    = No such command `{0|%s}`

# Commands Command
commands.commands.command                           = commands
commands.commands.help                              = Alias for `[commands.help.command]`.
commands.commands.detailed_help                     = Alias for `[commands.help.command]`
commands.commands.arguments                         = \\\\\\[<command>]

####### General commands #######
# Common
commands.common.user_not_found                      = Unable to find user. Try typing their name EXACTLY or \
  @mention them instead
commands.common.self_reference                      = `{0|%s}`, you can omit your name when using this command to refer \
  to yourself
commands.common.support_mention_front_match         = Supports @mention and partial front matching
commands.common.cannot_use_private_message          = You cannot use this command in a private conversation

# Admin
commands.general.admin.command                      = sudo
commands.general.admin.help                         = Administrative commands
commands.general.admin.detailed_help                = Base command for various administrator-only commands. Use \
  `[commands.general.admin.command] [commands.help.command]` to view the list of commands
commands.general.admin.arguments                    = <args>...
commands.general.admin.response.reject              = ` {0|%s} ` is not in the sudoers file. This incident will be reported
commands.general.admin.response.easter_egg.format   = I think the {0|%s} goes in the {1|%s} square
commands.general.admin.response.easter_egg.tuple    = {0|%s} {1|%s}
commands.general.admin.response.easter_egg.top      = top
commands.general.admin.response.easter_egg.bottom   = bottom
commands.general.admin.response.easter_egg.center   = center
commands.general.admin.response.easter_egg.right    = right
commands.general.admin.response.easter_egg.left     = left

# Mod
commands.general.mod.command                        = mod
commands.general.mod.help                           = Moderation commands
commands.general.mod.detailed_help                  = Base command for various moderator-only commands. Use \
  `[commands.general.mod.command] [commands.help.command]` to view the list of commands
commands.general.mod.arguments                      = <args>...
commands.general.mod.response.reject                = ` {0|%s} ` is not a moderator on this server
commands.general.mod.response.unsupported_server    = This server does not yet support moderation commands

# List admins
commands.general.admins.command                     = admins
commands.general.admins.help                        = List bot administrators
commands.general.admins.detailed_help               = Responds with a list of users who are able to administrate this \
  bot and use the `[commands.general.admin.command]` command
commands.general.admins.arguments                   = <none>
commands.general.admins.response.none               = None
commands.general.admins.response.format             = Admins: `{0|%s}`

# Info
commands.general.info.command                       = info
commands.general.info.help                          = Display information about the caller or the provided name
commands.general.info.detailed_help                 = Displays information about the provided user, or if no user is \
  specified, the person who issued the command. [commands.common.support_mention_front_match]
commands.general.info.arguments                     = \\\\\\[<at-mention>|<username>|<start-of-username>|<user-id>]
commands.general.info.examples                      = self: `.[commands.general.info.command]`, \
  username: `.[commands.general.info.command] WahrBot`, \
  start-of-username: `.[commands.general.info.command] Wahr`, \
  at-mention: `.[commands.general.info.command] @WahrBot`, \
  user-id: `.[commands.general.info.command] 123456789`
commands.general.info.response.not_found            = [commands.common.user_not_found]
commands.general.info.response.format               = **Username:** `{0|%s}#{8|%s}`\n\
  **{7|%s}**\n\
  **Playing:** {6|%s}\n\
  **ID:** {1|%s}\n\
  **Joined:** {5|%s}\n\
  {2|%s}{3|%s}{9|%s}\
  **Avatar:** {4|%s}
commands.general.info.response.no_avatar            = [commands.general.avatar.response.no_avatar]
commands.general.info.response.blacklisted          = **Blacklisted**\n
commands.general.info.response.admin                = **Bot Administrator**\n
commands.general.info.response.bot                  = **Bot**\n

# Avatar
commands.general.avatar.command                     = avatar
commands.general.avatar.help                        = Display the avatar of the caller or the provided name. Use \
  `[commands.general.avatar.subcommand.server]` for the server's avatar
commands.general.avatar.detailed_help               = Displays the avatar of the provided user, or if no user is \
  specified, the person who issued the command. [commands.common.support_mention_front_match]. To get the avatar of the server, specify `[commands.general.avatar.subcommand.server]` as the user
commands.general.avatar.arguments                   = \\\\\\[<at-mention>|<username>|<start-of-username>|<user-id>\
  |"server"]
commands.general.avatar.examples                      = self: `.[commands.general.avatar.command]`, \
  username: `.[commands.general.avatar.command] WahrBot`, \
  start-of-username: `.[commands.general.avatar.command] Wahr`, \
  at-mention: `.[commands.general.avatar.command] @WahrBot`, \
  user-id: `.[commands.general.avatar.command] 123456789` \
  server: `.[commands.general.avatar.command] server`
commands.general.avatar.subcommand.server           = server
commands.general.avatar.response.not_found          = [commands.common.user_not_found]
commands.general.avatar.response.no_avatar          = No avatar
commands.general.avatar.response.format             = `{0|%s}`'s avatar: {1|%s}
commands.general.avatar.response.server.not_member  = Bot is not a member of that server
commands.general.avatar.response.server.private     = You cannot use the `[commands.general.avatar.subcommand.server]` \
  option in a private message
commands.general.avatar.response.server.format.none = `{0|%s}` server has no avatar set
commands.general.avatar.response.server.format      = `{0|%s}` server avatar: {1|%s}

# Version
commands.general.version.command                    = version
commands.general.version.help                       = Display version information
commands.general.version.detailed_help              = Shows information about the git commit that this bot was built \
  from, including hash, GitHub URL, commit date, and commit message
commands.general.version.arguments                  = <none>

# Stats
commands.general.stats.command                      = stats
commands.general.stats.help                         = Display bot statistics
commands.general.stats.detailed_help                = Displays various technical statistics regarding bot operations. \
  You *probably* don't care but its here for you to sate your curiosity. Looking at you, Ael.
commands.general.stats.arguments                    = <none>
commands.general.stats.response.format              = __**Bot Statistics**__\n**MainCommandDispatcher**\n\
  CmdHandleTime: {0|%s} ms\nCmdOKHandleTime: {1|%s} ms\nReceivedCommands: {2|%,d} T/{3|%,d} OK/{4|%,d} KO\n**WebSocketClient**\nMsgHandleTime: {5|%s} ms\nMsgCount: {6|%,d}\nKeepAliveCount: {7|%,d}\nErrorCount: {8|%,d}\n**ApiClient**\nConnectAttemptCount: {9|%,d}\nEventCount: {10|%,d}\nEventDispatchErrorCount: {11|%,d}\nRESTClientErrorCount: {12|%,d}

# Roles
commands.general.roles.command                      = roles
commands.general.roles.help                         = Display all roles of the caller or the provided name
commands.general.roles.detailed_help                = Lists all roles the user belongs to, displaying their name, id, \
  and color. [commands.common.support_mention_front_match]
commands.general.roles.arguments                    = \\\\\\[<at-mention>|<username>|<start-of-username>|<user-id>]
commands.general.roles.examples                     = self: `.[commands.general.roles.command]`, \
  username: `.[commands.general.roles.command] WahrBot`, \
  start-of-username: `.[commands.general.roles.command] Wahr`, \
  at-mention: `.[commands.general.roles.command] @WahrBot`, \
  user-id: `.[commands.general.roles.command] 123456789`
commands.general.roles.response.not_found           = [commands.common.user_not_found]
commands.general.roles.response.member_not_found    = Unable to find member. Try typing their name EXACTLY or @mention \
  them instead
commands.general.roles.response.format              = `{0|%s}`'s roles: {1|%s}
commands.general.roles.response.role.format         = `{0|%s} ({1|%s}) 0x{2|%06X}`
commands.general.roles.response.no_roles            = No Custom Roles
commands.general.roles.response.private             = [commands.common.cannot_use_private_message]

# Change role color
commands.general.rolecolor.command                  = rolecolor
commands.general.rolecolor.help                     = Sets the role's color to a color
commands.general.rolecolor.detailed_help            = Sets the specified role's display color to the specified color. \
  Note that the bot and the caller must have the "Manage Roles" permission. In addition, colors must have a red value of at least 0x10, otherwise the color will be interpreted by Discord as white. Format is AARRGGBB, however alpha is ignored
commands.general.rolecolor.arguments                = <role-id> (<decimal-color>|0x<six-digit-hexadecimal-color>)
commands.general.rolecolor.response.help_format     = Format is [commands.general.rolecolor.arguments]
commands.general.rolecolor.response                 = Role `{0|%s} {1|%s}` color should have been changed to \
  `0x{2|%08X}`
commands.general.rolecolor.response.no_bot_perms    = The bot does not have permission to change role color
commands.general.rolecolor.response.no_user_perms   = You do not have permission to change role color
commands.general.rolecolor.response.role_not_found  = Cannot find the specified role. Double check the role id with \
  the `[commands.general.roles.command]` command
commands.general.rolecolor.response.general_error   = Error while performing command
commands.general.rolecolor.response.private         = [commands.common.cannot_use_private_message]

# Make-me-a-sandwich
commands.general.sandwich.command                   = make-me-a-sandwich
commands.general.sandwich.help                      = Asks the bot to make you a sandwich
commands.general.sandwich.detailed_help             = Asks the bot to make you a sandwich. You have no choice in what \
  goes in it. Be sure to ask nicely
commands.general.sandwich.arguments                 = \\\\\\["[commands.general.sandwich.magic_word]"]
commands.general.sandwich.magic_word                = please
commands.general.sandwich.response.magic            = What's the magic word?
commands.general.sandwich.response.deny             = No go make it yourself

# Dragon Nest commands
commands.general.dn.command                         = dn
commands.general.dn.help                            = Dragon Nest related commands
commands.general.dn.detailed_help                   = Base command for various Dragon Nest related commands. Use \
  `[commands.general.dn.command] [commands.help.command]` to view the list of commands
commands.general.dn.arguments                       = <args>...

# Insults
commands.general.insult.command                     = insult
commands.general.insult.help                        = Insults the provided user
commands.general.insult.detailed_help               = Insults the provided user. \
  [commands.common.support_mention_front_match]
commands.general.insult.arguments                   = \\\\\\[<at-mention>|<username>|<start-of-username>|<user-id>]
commands.general.insult.response.format             = @{0|%s}, {1|%s}
commands.general.insult.response.missing            = Who am I supposed to insult? Tell me, genius
commands.general.insult.response.not_found          = I can't find that person to insult
commands.general.insult.response.error              = I can't come up with an insult right now. Is the API down?
commands.general.insult.response.timeout            = This command cannot be used for a little while. Try again in a \
  couple of minutes

# Minific
commands.general.minific.command                    = minific
commands.general.minific.help                       = Retrieves a random minific or adds a new minific (requires \
  authorization)
commands.general.minific.detailed_help              = Retrieves a random minific for your reading pleasure. Authorized \
  authors may also use this command to add new minifics by simply typing the minific as an argument
commands.general.minific.arguments                  = <none>|<minific>
commands.general.minific.response.random            = **__Minific {0|%s}__**\nBy **{1|%s}** on {2|%s}\n{3|%s}
commands.general.minific.response.none              = There are no minifics available. Have an authorized author add \
  some!
commands.general.minific.response.not_found         = Minific {0|%s} not found
commands.general.minific.response.added             = Added as **__Minific {0|%s}__**
commands.general.minific.response.reject            = You are not an authorized author

commands.general.minific.response.manage.delete     = Minific {0|%s} deleted
commands.general.minific.response.manage.not_found  = Minific `{0|%s}` not found
commands.general.minific.response.manage.setauthor  = Minific `{0|%s}` author set to `{1|%s}`
commands.general.minific.response.manage.addauthor  = {0|%s} added as an authorized author
commands.general.minific.response.manage.setcontent = Minific `{0|%s}` content updated
commands.general.minific.response.manage.list       = **__{0|%s} {0|(EN_PLURAL;Minifics),(ONE;Minific)}__**\n{1|%s}
commands.general.minific.response.manage.list.entry = **{0|%s}**: By **{1|%s}** on {2|%s}.
commands.general.minific.response.manage.error      = Invalid format
commands.general.minific.response.manage.no_user    = Cannot find user
commands.general.minific.response.manage.reject     = You are not authorized to manage minifics

# GamePop
commands.general.gamepop.command                    = gamepop
commands.general.gamepop.help                       = Lists the top 5 currently playing games in this server
commands.general.gamepop.detailed_help              = Lists the 5 games that have the most people playing at the \
  moment in this server, as well as counting how many other unique games and not playing/not sharing online members
commands.general.gamepop.arguments                  = <none>
commands.general.gamepop.response.format            = **__Game Population__**\nOf the {0|%,d} online \
  {0|(EN_PLURAL;members),(ONE;member)}, **{1|%,d}\
  ** {1|(EN_PLURAL;people are),(ONE;person is)} currently playing {2|%,d} unique {2|(EN_PLURAL;games),(ONE;game)}.\n\
  {3|%,d} {3|(EN_PLURAL;people are),(ONE;person is)} not playing or not sharing what they are playing.\n{4|%s}
commands.general.gamepop.response.entry             = {0|%d}. **{1|%s}:** {2|%,d} {2|(EN_PLURAL;players),(ONE;player)} \
  ({3|%.1f}%)


####### Dragon Nest Commands #######

# Defense calculator
commands.dn.defense.command                         = defense
commands.dn.defense.help                            = Level cap defense/effective HP calculator
commands.dn.defense.detailed_help                   = Calculates your (default lvl 80) defenses as a percentage and \
  your effective HP given your character's HP and **raw** (numerical) defense stats. You may include commas in your \
  number as well as use `[commands.dn.defense.suffix.thousand]`, `[commands.dn.defense.suffix.million]`, and \
  `[commands.dn.defense.suffix.billion]` suffixes to represent thousand, million, and billion respectively. \
  Values must be **at least** zero
commands.dn.defense.arguments                       = raw-hp defense magic-defense \\\\\\[level (1-100)]
commands.dn.defense.examples                        = `.dn defense 1.87m 72.4k 80k`, \
  `.dn defense 1.87m 72.4k 80k 80`, \
  `.dn defense 1.87m 72.4k 80k 90`, \
  `.dn defense 2345678 72400 75k` \
  `.dn defense 2,345,678 72,400 75k`
commands.dn.defense.suffix.thousand                 = k
commands.dn.defense.suffix.million                  = m
commands.dn.defense.suffix.billion                  = b
commands.dn.defense.response.format                 = __**Level {4|%d} Stats**__\nDefense cap is {5|%,d} ({6|%,d}%)\n`\
  {0|%.1f}%` physical defense\n\
  `{1|%.1f}%` magic defense\n`{2|%,d}` effective physical health\n`{3|%,d}` effective magical health
commands.dn.defense.response.invalid                = Invalid format. Use `{0|%s}[commands.general.dn.command] \
  [commands.help.command] [commands.dn.defense.command]` for more information
commands.dn.defense.response.level_out_of_range     = Level must be between {0|%d} and {1|%d} inclusive

# FD Calculator
commands.dn.finaldamage.command                     = fd
commands.dn.finaldamage.help                        = Final damage calculator
commands.dn.finaldamage.detailed_help               = Calculates your (default lvl 80) final damage as a percentage \
  given your **raw** (numerical) FD stat. You may include commas in your number as well as use \
  `[commands.dn.finaldamage.suffix.thousand]` suffix to represent thousand. Values must be **at least** zero. \
  To see how much FD is required to hit a specific percent, specify a percentage instead.
commands.dn.finaldamage.arguments                   = <final-damage|final-damage-percent%> \\\\\\[level (1-100)]
commands.dn.finaldamage.examples                    = `.dn fd 4k`, \
  `.dn fd 4.6k 10`, \
  `.dn fd 4k 90`, \
  `.dn fd 4271 84`, \
  `.dn fd 9001 100`, \
  `.dn fd 70% 93`
commands.dn.finaldamage.suffix.thousand             = k
commands.dn.finaldamage.response.format             = **Level {0|%d} Final Damage:** `{1|%.1f}%` (cap is {2|%,d} \
  ({3|%,d}%))
commands.dn.finaldamage.response.format.required    = **Level {0|%d} Final Damage:** `{1|%,d}` to reach `{2|%.1f}%`
commands.dn.finaldamage.response.invalid            = Invalid format. Use `{0|%s}[commands.general.dn.command] \
  [commands.help.command] [commands.dn.finaldamage.command]` for more information
commands.dn.finaldamage.response.level_out_of_range = Level must be between {0|%d} and {1|%d} inclusive

# Critical Calculator
commands.dn.crit.command                            = crit
commands.dn.crit.help                               = Critical chance calculator
commands.dn.crit.detailed_help                      = Calculates your (default lvl 80) critical chance as a percentage\
   given your **raw** (numerical) crit stat. You may include commas in your number as well as use \
  `[commands.dn.crit.suffix.thousand]` suffix to represent thousand. Values must be **at least** zero. \
  To see how much crit is required to hit a specific percent, specify a percentage instead.
commands.dn.crit.arguments                          = crit \\\\\\[level (1-100)]
commands.dn.crit.examples                           = `.dn crit 130k`, \
  `.dn crit 132,493`, \
  `.dn crit 130.45k 80`, \
  `.dn crit 130k 90`, \
  `.dn crit 130k 84`, \
  `.dn crit 75% 93`
commands.dn.crit.suffix.thousand                    = k
commands.dn.crit.response.format                    = **Level {0|%d} Critical Chance:** `{1|%.1f}%` (cap is {2|%,d} \
  ({3|%,d}%))
commands.dn.crit.response.format.required           = **Level {0|%d} Critical Chance:** `{1|%,d}` to reach `{2|%.1f}%`
commands.dn.crit.response.invalid                   = Invalid format. Use `{0|%s}[commands.general.dn.command] \
  [commands.help.command] [commands.dn.crit.command]` for more information
commands.dn.crit.response.level_out_of_range        = Level must be between {0|%d} and {1|%d} inclusive

# Crit Damage Calculator
commands.dn.critdmg.command                         = critdmg
commands.dn.critdmg.help                            = Critical damage calculator
commands.dn.critdmg.detailed_help                   = Calculates your (default lvl 80) critical damage as a percentage \
  given your **raw** (numerical) critical damage stat. You may include commas in your number as well as use \
  `[commands.dn.critdmg.suffix.thousand]` suffix to represent thousand. Values must be **at least** zero. \
  To see how much critical damage is required to hit a specific percent, specify a percentage instead.
commands.dn.critdmg.arguments                       = crit-damage \\\\\\[level (1-100)]
commands.dn.critdmg.examples                        = `.dn critdmg 230k`, \
  `.dn critdmg 232,493`, \
  `.dn critdmg 230.45k 80`, \
  `.dn critdmg 230k 90`, \
  `.dn critdmg 230k 84`, \
  `.dn critdmg 250% 93`
commands.dn.critdmg.suffix.thousand                 = k
commands.dn.critdmg.response.format                 = **Level {0|%d} Critical Damage:** `{1|%.1f}%` (cap is {2|%,d} \
  ({3|%,d}%))
commands.dn.critdmg.response.format.required        = **Level {0|%d} Critical Damage:** `{1|%,d}` to reach `{2|%.1f}%`
commands.dn.critdmg.response.invalid                = Invalid format. Use `{0|%s}[commands.general.dn.command] \
  [commands.help.command] [commands.dn.critdmg.command]` for more information
commands.dn.critdmg.response.level_out_of_range     = Level must be between {0|%d} and {1|%d} inclusive

# DN status
commands.dn.track.version.command                   = version
commands.dn.track.version.help                      = Displays all supported DN servers' current version or a specific \
  server's version
commands.dn.track.version.detailed_help             = Displays all the supported DN servers' current game version if \
  no arguments are supplied. If a region code is supplied, then only that server's information is displayed. Supported \
  region codes are: `na` for [commands.dn.track.region.na], `kr` for [commands.dn.track.region.kr], \
  `sea` for [commands.dn.track.region.sea].
commands.dn.track.version.arguments                 = \\\\\\[region code]
commands.dn.track.version.updated                   = DN {1|%s} has updated from {2|%d} to {3|%d}
commands.dn.track.version.current                   = Current DN {1|%s} \\[`{4|%s}`] version is {2|%d} (patched {3|%s})
commands.dn.track.version.all.format                = **__DN Versions__**\n{1|%s}\nFor a specific version only, use the \
  region code (highlighted in `code block`) when using this command
commands.dn.track.version.all.entry                 = DN {1|%s} \\[`{4|%s}`] v{2|%d} (patched {3|%s})
commands.dn.track.version.not_found                 = Region code not found. Try one of {1|%s} instead
commands.dn.track.status.down                       = down
commands.dn.track.status.up                         = up
commands.dn.track.status.updated                    = DN {1|%s} is now {2|%s}
commands.dn.track.status.current                    = DN {1|%s} is currently {2|%s}

commands.dn.track.region.na                         = North America
commands.dn.track.region.kr                         = Korea
commands.dn.track.region.sea                        = Southeast Asia
commands.dn.track.region.eu                         = Europe
commands.dn.track.region.tw                         = Taiwan
commands.dn.track.region.jp                         = Japan
commands.dn.track.region.ch                         = China


####### Moderator Commands #######

# timeout
commands.mod.timeout.command                        = timeout
commands.mod.timeout.help                           = Times out the given user by adding them to the server-set \
  Jail role
commands.mod.timeout.detailed_help                  = Times out the user for the given user, or shows for how long \
  the given user is timed out for (if no time specified). \
  Re-issuing this command restarts the clock with the new duration. Default duration unit is seconds. To specify \
  other units, use `s` for seconds, `m` for minutes, `h` for hours, and `d` for days. These can be combined as well.
commands.mod.timeout.arguments                      = <at-mention>|<user-id> \\\\\\[<duration>]
commands.mod.timeout.arguments2                     = <at-mention>|<user-id> \\\\[<duration>]
commands.mod.timeout.examples                       = 45s timeout via mention: `.mod timeout @baduser 45`, \
  45s timeout via ID: `.mod timeout 123456789 45`, \
  1h30m timeout: `.mod timeout @baduser 1h30m` OR `.mod timeout @baduser 1h 30m` OR `.mod timeout @baduser 30m1h` OR\
   `.mod timeout @baduser 30m 1h` OR `.mod timeout @baduser 90m` OR `.mod timeout @baduser 5400`
commands.mod.timeout.response                       = User `{0|%s}` ({1|%s}) has been timed out for **{2|%s}** \
  (expires `{3|%s}`)
commands.mod.timeout.response.check                 = User `{0|%s}` ({1|%s}) is timed out for another **{2|%s}** \
  (expires `{3|%s}`) by `{4|%s}` ({5|%s})
commands.mod.timeout.response.check.not_found       = User `{0|%s}` ({1|%s}) is not timed out
commands.mod.timeout.response.invalid               = Please check your format: `[commands.mod.timeout.arguments2]`

commands.mod.stoptimeout.command                    = stoptimeout
commands.mod.stoptimeout.help                       = Ends the user's timeout before it has expired
commands.mod.stoptimeout.detailed_help              = Removes the user from the Jail role
commands.mod.stoptimeout.arguments                  = <at-mention>|<user-id>
commands.mod.stoptimeout.response                   = Timeout for user `{0|%s}` ({1|%s}) has been cancelled
commands.mod.stoptimeout.response.not_found         = User `{0|%s}` ({1|%s}) was not timed out by this bot, but the \
  timeout role (if present) was removed
commands.mod.stoptimeout.response.not_id            = The given user does not appear to be an at-mention or a user ID \
  number. Please use a valid at-mention or user ID number
commands.mod.stoptimeout.response.invalid           = Please check your format: `[commands.mod.stoptimeout.arguments]`

commands.mod.settimeoutrole.command                 = settimeoutrole
commands.mod.settimeoutrole.help                    = Sets the timeout role
commands.mod.settimeoutrole.detailed_help           = Sets the role to use as the timeout role, by role ID
commands.mod.settimeoutrole.arguments               = <role-id>
commands.mod.settimeoutrole.response                = `{0|%s}` ({1|%s}) set as timeout role
commands.mod.settimeoutrole.response.not_found      = Role ID `{0|%s}` does not exist
commands.mod.settimeoutrole.response.missing        = Please specify a role ID

listener.mod.timeout.on_evasion                     = Nice try, <@{0|%s}>. You are timed out for another **{1|%s}** \
  (expires `{2|%s}`) still
listener.mod.timeout.on_evasion.add                 = Nice try, <@{0|%s}>. Your timeout has been increased by \
  **{1|%s}** (now expires `{2|%s}`) for your evasion attempt

message.mod.timeout.expire                          = Your timeout has expired, <@{0|%s}>
message.mod.timeout.expire.not_found                = Timeout for `{0|%s}` ({1|%s}) expired (currently not a member \
  of the server)
message.mod.timeout.not_configured                  = This server has not yet been configured with a timeout role. \
  Please set it with [commands.mod.settimeoutrole.command]
message.mod.timeout.bad_role                        = The role specified for this server (I{0|%s}) does not exist. \
  Please set a valid role with [commands.mod.settimeoutrole.command]

# Vanish
commands.mod.vanish.command                         = vanish
commands.mod.vanish.help                            = Deletes a user's messages
commands.mod.vanish.detailed_help                   = Deletes the past `number-of-messages` messages (default 5) the \
  given user has sent
commands.mod.vanish.arguments                       = <at-mention>|<username>|<start-of-username>|<user-id> \
  \\\\\\[<number-of-messages>]

# Ban
commands.mod.ban.command                            = ban
commands.mod.ban.help                               = Bans the user or user ID
commands.mod.ban.detailed_help                      = TODO
commands.mod.ban.arguments                          = <at-mention>|<username>|<start-of-username>|<user-id>
commands.mod.ban.response                           = `{0|%s}` ({1|%s}) has been banned.
commands.mod.ban.not_found                          = Cannot find member

# JoinLeave
commands.mod.jl.command                             = jl
commands.mod.jl.help                                = Sets the channel for join/leave messages
commands.mod.jl.detailed_help                       = Sets the channel for join/leave messages for this server \
  use `default` to use the default/lobby channel, `this` to the channel the command was sent, or a channel ID that \
  belongs to this server. Specify "join" to only change the join channel, "leave" for the leave channel, or "both" \
  to set both. By default, if none are specified, the command will set both.
commands.mod.jl.arguments                           = <channelId|"default"|"this"> \\\\\\[join|leave|both]
commands.mod.jl.response                            = Join/leave message channel set to `{0|%s}` ({1|%s}).
commands.mod.jl.response.invalid                    = Not a valid channel

commands.mod.welcome.command                        = setwelcome
commands.mod.welcome.help                           = Sets the welcome message for new members joining the server
commands.mod.welcome.detailed_help                  = Set a welcome message for new members. This message will be \
  displayed to members that join. Your welcome message can contain placeholders for their name (`$n`), \
  discriminator (`$d`), Discord ID (`$i`), server name (`$s`), and join time (`$t`). To at-mention them, use `$m`. \
  Simply use those placeholders in your message and they will be automatically replaced appropriately. If you wish to \
  turn off welcome messages, then use `none` as the message. To reset to the default welcome message, \
  use `default` as the message.
commands.mod.welcome.arguments                      = <welcomeMessage|"none"|"default">
commands.mod.welcome.response.set                   = Welcome message set. Example:\n{0|%s}
commands.mod.welcome.response.none                  = Welcome messages disabled
commands.mod.welcome.response.default               = Welcome message set to default.

commands.mod.farewell.command                        = setfarewell
commands.mod.farewell.help                           = Sets the farewell message for members leaving the server
commands.mod.farewell.detailed_help                  = Set a farewell message for leaving members. This message will \
  be displayed after members that leave. Your farewell message can contain placeholders for their name (`$n`), \
  discriminator (`$d`), Discord ID (`$i`), server name (`$s`), and join time (`$t`). \
  Simply use those placeholders in your message and they will be automatically replaced appropriately. If you wish to \
  turn off farewell messages, then use `none` as the message. To reset to the default farewell message, \
  use `default` as the message.
commands.mod.farewell.arguments                      = <farewellMessage|"none"|"default">
commands.mod.farewell.response.set                   = Farewell message set. Example:\n{0|%s}
commands.mod.farewell.response.none                  = Farewell messages disabled
commands.mod.farewell.response.default               = Farewell message set to default.

commands.mod.dntrack.command                         = dntrack
commands.mod.dntrack.help                            = Sets or clears the channel to broadcast DN status information
commands.mod.dntrack.detailed_help                   = Sets the channel to broadcast DN status information to or \
  turns it off for this server. Use this command in the channel that the bot should broadcast DN status changes \
  (versions, maintanences, etc) or specify `off` to turn them off for this server.
commands.mod.dntrack.arguments                       = \\\\\\["off"]
commands.mod.dntrack.examples                        = `.mod dntrack`, `.mod dntrack off`
commands.mod.dntrack.response.none                   = DN status information broadcasting disabled
commands.mod.dntrack.response.set                    = DN status information will be broadcasted in this channel

####### Admin Commands #######

# Start bot
commands.admin.start.command                        = start
commands.admin.start.help                           = Start the bot
commands.admin.start.detailed_help                  = Allows the bot to process all active commands
commands.admin.start.arguments                      = <none>
commands.admin.start.response.ok                    = Bot started
commands.admin.start.response.already_started       = Bot is already running

# Stop bot
commands.admin.stop.command                         = stop
commands.admin.stop.help                            = Stop the bot
commands.admin.stop.detailed_help                   = Prevents the bot from responding to commands except for commands \
  that ignore this setting
commands.admin.stop.arguments                       = <none>
commands.admin.stop.response.ok                     = Bot stopped
commands.admin.stop.response.already_stopped        = Bot is already stopped

# Status
commands.admin.status.command                       = status
commands.admin.status.help                          = Show bot status information
commands.admin.status.detailed_help                 = Shows various pieces of information about the bot's current \
  state. Servers that the bot has joined can be listed by specifying `[commands.admin.status.subcommand.servers]`
commands.admin.status.arguments                     = \\\\\\[commands.admin.status.subcommand.servers]
commands.admin.status.subcommand.servers            = server
commands.admin.status.response.format               = **Status:** {0|%s}\n**Servers:** {1|%s}\n**Uptime:** {2|%s}\n\
  **Heap:** `{3|%s}`\n**Load:** {4|%.4f}\n**Hamster Wheels in use:** {5|%s}
commands.admin.status.response.state.running        = Running
commands.admin.status.response.state.stopped        = Stopped
commands.admin.status.response.servers.entry        = `{0|%s}`: {1|%s}
commands.admin.status.response.servers.format       = {0|%d} servers:\n{1|%s}
commands.admin.status.response.memory.format        = {0|%,d}MB used {1|%,d}MB committed {2|%,d}MB max

# Kill
commands.admin.kill.command                         = kill
commands.admin.kill.help                            = Kill the bot
commands.admin.kill.detailed_help                   = Ends the JVM process that the bot is running on gracefully
commands.admin.kill.arguments                       = <none>
commands.admin.kill.response                        = Sudoku time, bye

# Restart
commands.admin.restart.command                      = restart
commands.admin.restart.help                         = Restart the bot
commands.admin.restart.detailed_help                = Signals the wrapper to start the application after the JVM exits \
  gracefully
commands.admin.restart.arguments                    = <none>
commands.admin.restart.response                     = Brb quick sudoku game

# Blacklist
commands.admin.blacklist.command                    = blacklist
commands.admin.blacklist.help                       = Adds the provided user to the blacklist, or if none specified, \
  lists blacklisted users
commands.admin.blacklist.detailed_help              = Blacklists the provided user, or lists blacklisted users if no \
  user is provided. [commands.common.support_mention_front_match]
commands.admin.blacklist.arguments                  = \\\\\\[<at-mention>|<username>|<start-of-username>|<user-id>]
commands.admin.blacklist.response.not_found         = Unable to find user
commands.admin.blacklist.response.admin             = Cannot blacklist a bot administrator
commands.admin.blacklist.response.format            = `{0|%s}` has been blacklisted
commands.admin.blacklist.response.list.none         = None
commands.admin.blacklist.response.list.format       = Blacklisted users: `{0|%s}`

# Pardon
commands.admin.pardon.command                       = pardon
commands.admin.pardon.help                          = Pardons the provided user from the blacklist.
commands.admin.pardon.detailed_help                 = Pardons (removes) the provided user from the blacklist. \
  [commands.common.support_mention_front_match]
commands.admin.pardon.arguments                     = \\\\\\[<at-mention>|<username>|<start-of-username>|<user-id>]
commands.admin.pardon.response.no_user              = Please specify a username
commands.admin.pardon.response.not_found            = Unable to find user
commands.admin.pardon.response.format               = `{0|%s}` has been pardoned
commands.admin.pardon.response.not_blacklisted      = `{0|%s}` was not blacklisted

# Join
commands.admin.join.command                         = join
commands.admin.join.help                            = Attempt to join a server using a discord.gg invite link
commands.admin.join.detailed_help                   = Bot will attempt to join using the provided discord.gg invite link
commands.admin.join.arguments                       = <http-discord.gg-invite-link>
commands.admin.join.response.invalid                = Invalid invite link
commands.admin.join.response.http_error             = Unable to join server: HTTP {0|%d}
commands.admin.join.response.network_error          = Unable to join server: Network error

# Telegram
commands.admin.telegram.command                     = telegram
commands.admin.telegram.help                        = Sends a message to the specified channel
commands.admin.telegram.detailed_help               = Sends a simple message using the specified channel ID. Supports \
  mentions for users that are able to be mentioned from the channel the command is being issued from
commands.admin.telegram.arguments                   = <target-channel-id> <message content>
commands.admin.telegram.response.invalid            = Please specify a channelID and message: telegram CHANNEL_ID \
  MESSAGE

# Raw
commands.admin.raw.command                          = raw
commands.admin.raw.help                             = Sends a raw JSON message
commands.admin.raw.detailed_help                    = Send a Message defined using a JSON string. You may optionally \
  specify a target channel ID, similar to the `[commands.admin.telegram.command]` command
commands.admin.raw.arguments                        = \\\\\\[cid=<target-channel-id>] <json-message>
commands.admin.raw.response.invalid                 = Invalid JSON

# Prefix
commands.admin.prefix.command                       = prefix
commands.admin.prefix.help                          = Get or set the main command prefix
commands.admin.prefix.detailed_help                 = Set the main command prefix to the provided string, or if no \
  string is provided, print the current command prefix
commands.admin.prefix.arguments                     = \\\\\\[<new-command-prefix>]
commands.admin.prefix.response.get                  = Command prefix: `{0|%d}`
commands.admin.prefix.response.set                  = Command prefix set to: `{0|%d}`

# Make-me-a-sandwich
commands.admin.sandwich.command                     = [commands.general.sandwich.command]
commands.admin.sandwich.help                        = [commands.general.sandwich.help]
commands.admin.sandwich.detailed_help               = [commands.general.sandwich.detailed_help]
commands.admin.sandwich.arguments                   = \\\\\\["please"]
commands.admin.sandwich.response.magic              = [commands.general.sandwich.response.magic]
commands.admin.sandwich.response                    = Ok! Here you go: http://img.phoenixlab.co/.bot/sandwich.jpg

# eval
commands.admin.eval.command                         = eval
commands.admin.eval.help                            = Evaluates the given JavaScript code block, or a the script at \
  the provided URL
commands.admin.eval.detailed_help                   = Attempts to evaluate a triple backtick code block of JavaScript, \
  or if given a URL, attempts to evaluate the script at the URL
commands.admin.eval.arguments                       = <triple-backtick-code-block>|<url-to-script>
commands.admin.eval.response.exception              = ```Unable to evaluate script: {0|%s}```
commands.admin.eval.response.http_error             = ```Unable to evaluate script: HTTP {0|%s}: {1|%s}```

# Now Playing
commands.admin.playing.command                     = playing
commands.admin.playing.help                        = Updates the bot's Now Playing status
commands.admin.playing.detailed_help               = Updates the Now Playing status text in the member list for the \
  bot. Leave blank to clear it
commands.admin.playing.arguments                   = \\\\\\[<text-to-show>]

# Member search
commands.admin.find.command                         = find
commands.admin.find.help                            = Searches for users by username
commands.admin.find.detailed_help                   = Searches and lists users that match the given regex pattern
commands.admin.find.arguments                       = <regex-expression>
commands.admin.find.response.format                 = **__Found {0|%,d} {0|(EN_PLURAL;matches),(ONE;match)}__**: {1|%s}
commands.admin.find.response.oversize               = **__Found {0|%,d} {0|(EN_PLURAL;matches),(ONE;match)}s__**\n\
  Please narrow your criteria and try again
commands.admin.find.response.entry                  = `{0|%s}` ({1|%s} - {2|%s})
commands.admin.find.response.invalid                = Invalid regex

# Integrity check
commands.admin.integrity.command                    = checkintegrity
commands.admin.integrity.help                       = Checks the bot's data integrity
commands.admin.integrity.detailed_help              = Checks for any corrupted bot data and displays it, if any
commands.admin.integrity.arguments                  = <none>

############
# Misc

time.seconds                                        = {0|%,d} {0|(EN_PLURAL;seconds),(ONE;second)}
time.minutes                                        = {0|%,d} {0|(EN_PLURAL;minutes),(ONE;minute)}
time.hours                                          = {0|%,d} {0|(EN_PLURAL;hours),(ONE;hour)}
time.days                                           = {0|%,d} {0|(EN_PLURAL;days),(ONE;day)}
time.years                                          = {0|%,d} {0|(EN_PLURAL;years),(ONE;year)}
time.centuries                                      = {0|%,d} {0|(EN_PLURAL;centuries),(ONE;century)}
time.millenia                                       = {0|%,d} {0|(EN_PLURAL;millenia),(ONE;millenium)}

misc.nothing                                        = Nothing
misc.unknown                                        = Unknown

status.online                                       = Online
status.away                                         = Idle
status.offline                                      = Offline
