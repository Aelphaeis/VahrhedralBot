# Bot localization strings

# Response to @mention
message.mention.response                            = U wot @{0|%s}?

# Join message
message.on_join.response                            = Hi! I'm `{0|%s}`. I am a bot created by Vahrheit, you can find my source code or contact my owner here https://github.com/vincentzhang96/VahrhedralBot

# New member message
message.new_member.response                         = Welcome `{0|%s}`!

commands.arguments                                  = Arguments: `{0|%s}`

# Help Command
commands.help.command                               = help
commands.help.help                                  = Lists available commands. Use `[commands.help.command] <command>` for more details about `<command>`
commands.help.detailed_help                         = Use the command with no arguments to list available commands. Use `[commands.help.command] <command>` for more details about `<command>`
commands.help.arguments                             = \\\\\\[<command>]
commands.help.response.head                         = __**{0|%d} Available {0|(EN_PLURAL;Commands),(ONE;Command)}**__\n
commands.help.response.entry                        = **{0|%s}{1|%s}** - {2|%s}
commands.help.response.detailed                     = `{0|%s}`** Command**\n{1|%s}\n__Arguments:__ `{2|%s}`
commands.help.response.not_found                    = No such command `{0|%s}`

####### General commands #######
# Common
commands.common.user_not_found                      = Unable to find user. Try typing their name EXACTLY or @mention them instead
commands.common.self_reference                      = {0|%s}, you can omit your name when using this command to refer to yourself
commands.common.support_mention_front_match         = Supports @mention and partial front matching
commands.common.cannot_use_private_message          = You cannot use this command in a private conversation

# Admin
commands.general.admin.command                      = sudo
commands.general.admin.help                         = Administrative commands
commands.general.admin.detailed_help                = Base command for various administrator-only commands. Use `[commands.general.admin.command] [commands.help.command]` to view the list of commands
commands.general.admin.arguments                    = <args>...
commands.general.admin.response.reject              = {0|%s} is not in the sudoers file. This incident will be reported
commands.general.admin.response.easter_egg.format   = I think the {0|%s} goes in the {1|%s} square
commands.general.admin.response.easter_egg.tuple    = {0|%s} {1|%s}
commands.general.admin.response.easter_egg.top      = top
commands.general.admin.response.easter_egg.bottom   = bottom
commands.general.admin.response.easter_egg.center   = center
commands.general.admin.response.easter_egg.right    = right
commands.general.admin.response.easter_egg.left     = left

# Mod
commands.general.mod.command                        = mod
commands.general.mod.help                           = Moderation commands
commands.general.mod.detailed_help                  = Base command for various moderator-only commands. Use `[commands.general.mod.command] [commands.help.command]` to view the list of commands
commands.general.mod.arguments                      = <args>...
commands.general.mod.response.reject                = {0|%s} is not a moderator on this server
commands.general.mod.response.unsupported_server    = This server does not yet support moderation commands

# List admins
commands.general.admins.command                     = admins
commands.general.admins.help                        = List bot administrators
commands.general.admins.detailed_help               = Responds with a list of users who are able to administrate this bot and use the `[commands.general.admin.command]` command
commands.general.admins.arguments                   = <none>
commands.general.admins.response.none               = None
commands.general.admins.response.format             = Admins: `{0|%s}`

# Info
commands.general.info.command                       = info
commands.general.info.help                          = Display information about the caller or the provided name
commands.general.info.detailed_help                 = Displays information about the provided user, or if no user is specified, the person who issued the command. [commands.common.support_mention_front_match]
commands.general.info.arguments                     = \\\\\\[<at-mention>|<username>|<start-of-username>|<user-id>]
commands.general.info.response.not_found            = [commands.common.user_not_found]
commands.general.info.response.format               = **Username:** `{0|%s}`\n**ID:** {1|%s}\n{2|%s}{3|%s}**Avatar:** {4|%s}
commands.general.info.response.no_avatar            = [commands.general.avatar.response.no_avatar]
commands.general.info.response.blacklisted          = **Blacklisted**\n
commands.general.info.response.admin                = **Bot Administrator**\n

# Avatar
commands.general.avatar.command                     = avatar
commands.general.avatar.help                        = Display the avatar of the caller or the provided name. Use `[commands.general.avatar.subcommand.server]` for the server's avatar
commands.general.avatar.detailed_help               = Displays the avatar of the provided user, or if no user is specified, the person who issued the command. [commands.common.support_mention_front_match]. To get the avatar of the server, specify `[commands.general.avatar.subcommand.server]` as the user
commands.general.avatar.arguments                   = \\\\\\[<at-mention>|<username>|<start-of-username>|<user-id>|"server"]
commands.general.avatar.subcommand.server           = server
commands.general.avatar.response.not_found          = [commands.common.user_not_found]
commands.general.avatar.response.no_avatar          = No avatar
commands.general.avatar.response.format             = `{0|%s}`'s avatar: {1|%s}
commands.general.avatar.response.server.not_member  = Bot is not a member of that server
commands.general.avatar.response.server.private     = You cannot use the `[commands.general.avatar.subcommand.server]` option in a private message
commands.general.avatar.response.server.format.none = {0|%s} server has no avatar set
commands.general.avatar.response.server.format      = {0|%s} server avatar: {1|%s}

# Version
commands.general.version.command                    = version
commands.general.version.help                       = Display version information
commands.general.version.detailed_help              = Shows information about the git commit that this bot was built from, including hash, GitHub URL, commit date, and commit message
commands.general.version.arguments                  = <none>

# Stats
commands.general.stats.command                      = stats
commands.general.stats.help                         = Display bot statistics
commands.general.stats.detailed_help                = Displays various technical statistics regarding bot operations. You *probably* don't care but its here for you to sate your curiosity. Looking at you, Ael.
commands.general.stats.arguments                    = <none>
commands.general.stats.response.format              = __**Bot Statistics**__\n**MainCommandDispatcher**\nCmdHandleTime: {0|%s} ms\nCmdOKHandleTime: {1|%s} ms\nReceivedCommands: {2|%,d} T/{3|%,d} OK/{4|%,d} KO\n**WebSocketClient**\nMsgHandleTime: {5|%s} ms\nMsgCount: {6|%,d}\nKeepAliveCount: {7|%,d}\nErrorCount: {8|%,d}\n**ApiClient**\nConnectAttemptCount: {9|%,d}\nEventCount: {10|%,d}\nEventDispatchErrorCount: {11|%,d}\nRESTClientErrorCount: {12|%,d}

# Roles
commands.general.roles.command                      = roles
commands.general.roles.help                         = Display all roles of the caller or the provided name
commands.general.roles.detailed_help                = Lists all roles the user belongs to, displaying their name, id, and color. [commands.common.support_mention_front_match]
commands.general.roles.arguments                    = \\\\\\[<at-mention>|<username>|<start-of-username>|<user-id>]
commands.general.roles.response.not_found           = [commands.common.user_not_found]
commands.general.roles.response.member_not_found    = Unable to find member. Try typing their name EXACTLY or @mention them instead
commands.general.roles.response.format              = `{0|%s}`'s roles: {1|%s}
commands.general.roles.response.role.format         = `{0|%s} ({1|%s}) 0x{2|%08X}`
commands.general.roles.response.no_roles            = No Custom Roles
commands.general.roles.response.private             = [commands.common.cannot_use_private_message]

# Change role color
commands.general.rolecolor.command                  = rolecolor
commands.general.rolecolor.help                     = Sets the role's color to a color
commands.general.rolecolor.detailed_help            = Sets the specified role's display color to the specified color. Note that the bot and the caller must have the "Manage Roles" permission. In addition, colors must have a red value of at least 0x10, otherwise the color will be interpreted by Discord as white. Format is AARRGGBB, however alpha is ignored
commands.general.rolecolor.arguments                = <role-id> (<decimal-color>|0x<six-digit-hexadecimal-color>)
commands.general.rolecolor.response.help_format     = Format is [commands.general.rolecolor.arguments]
commands.general.rolecolor.response                 = Role `{0|%s} {1|%s}` color should have been changed to `0x{2|%08X}`
commands.general.rolecolor.response.no_bot_perms    = The bot does not have permission to change role color
commands.general.rolecolor.response.no_user_perms   = You do not have permission to change role color
commands.general.rolecolor.response.role_not_found  = Cannot find the specified role. Double check the role id with the `[commands.general.roles.command]` command
commands.general.rolecolor.response.general_error   = Error while performing command
commands.general.rolecolor.response.private         = [commands.common.cannot_use_private_message]

# Make-me-a-sandwich
commands.general.sandwich.command                   = make-me-a-sandwich
commands.general.sandwich.help                      = Asks the bot to make you a sandwich
commands.general.sandwich.detailed_help             = Asks the bot to make you a sandwich. You have no choice in what goes in it. Be sure to ask nicely
commands.general.sandwich.arguments                 = \\\\\\["[commands.general.sandwich.magic_word]"]
commands.general.sandwich.magic_word                = please
commands.general.sandwich.response.magic            = What's the magic word?
commands.general.sandwich.response.deny             = No go make it yourself

# Dragon Nest commands
commands.general.dn.command                         = dn
commands.general.dn.help                            = Dragon Nest related commands
commands.general.dn.detailed_help                   = Base command for various Dragon Nest related commands. Use `[commands.general.dn.command] [commands.help.command]` to view the list of commands
commands.general.dn.arguments                       = <args>...

# Insults
commands.general.insult.command                     = insult
commands.general.insult.help                        = Insults the provided user
commands.general.insult.detailed_help               = Insults the provided user. [commands.common.support_mention_front_match]
commands.general.insult.arguments                   = \\\\\\[<at-mention>|<username>|<start-of-username>|<user-id>]
commands.general.insult.response.format             = @{0|%s}, {1|%s}
commands.general.insult.response.missing            = Who am I supposed to insult? Tell me, genius
commands.general.insult.response.not_found          = I can't find that person to insult
commands.general.insult.response.error              = I can't come up with an insult right now. Is the API down?
commands.general.insult.response.timeout            = This command cannot be used for a little while. Try again in a couple of minutes


####### Dragon Nest Commands #######

# Defense calculator
commands.dn.defense.command                         = defense
commands.dn.defense.help                            = Level cap defense/effective HP calculator
commands.dn.defense.detailed_help                   = Calculates your (default lvl 80) defenses as a percentage and your effective HP given your character's HP and **raw** (numerical) defense stats. You may include commas in your number as well as use `[commands.dn.defense.suffix.thousand]`, `[commands.dn.defense.suffix.million]`, and `[commands.dn.defense.suffix.billion]` suffixes to represent thousand, million, and billion respectively. Values must be **at least** zero
commands.dn.defense.arguments                       = raw-hp defense magic-defense \\\\\\[level (80-90)]
commands.dn.defense.suffix.thousand                 = k
commands.dn.defense.suffix.million                  = m
commands.dn.defense.suffix.billion                  = b
commands.dn.defense.response.format                 = __**Level {4|%d} Stats**__\n`{0|%d}%` physical defense\n`{1|%d}%` magic defense\n`{2|%,d}` effective physical health\n`{3|%,d}` effective magical health
commands.dn.defense.response.invalid                = Invalid format. Use `{0|%s}[commands.general.dn.command] [commands.help.command] [commands.dn.defense.command]` for more information
commands.dn.defense.response.level_out_of_range     = Level must be between {0|%d} and {1|%d} inclusive

# FD Calculator
commands.dn.finaldamage.command                     = fd
commands.dn.finaldamage.help                        = Final damage calculator (Level 80)
commands.dn.finaldamage.detailed_help               = Calculates your (default lvl 80) final damage as a percentage given your **raw** (numerical) FD stat. You may include commas in your number as well as use `[commands.dn.finaldamage.suffix.thousand]` suffix to represent thousand. Values must be **at least** zero
commands.dn.finaldamage.arguments                   = final-damage \\\\\\[level (80)]
commands.dn.finaldamage.suffix.thousand             = k
commands.dn.finaldamage.response.format             = **Level {0|%d} Final Damage:** `{1|%d}%`
commands.dn.finaldamage.response.invalid            = Invalid format. Use `{0|%s}[commands.general.dn.command] [commands.help.command] [commands.dn.finaldamage.command]` for more information
commands.dn.finaldamage.response.level_out_of_range = Level must be between {0|%d} and {1|%d} inclusive



####### Moderator Commands #######

# timeout
# TODO MAKE THIS MODERATOR COMMAND
# TODO REPLACE THIS WITH GENERAL COMMAND FOR ALL SERVERS
commands.mod.timeout.command                        = timeout
commands.mod.timeout.help                           = **REQUIRES PERMISSIONS** Times out the given user by adding them to the Jail role (DNNADiscord only)
commands.mod.timeout.detailed_help                  = Times out the user for the given user, or shows for how long the given user is timed out for (if no time specified). \
  Re-issuing this command restarts the clock with the new duration. Duration is in seconds
commands.mod.timeout.arguments                      = <at-mention>|<user-id> \\\\\\[<duration>]
commands.mod.timeout.response                       = User `{0|%s}` ({1|%s}) has been timed out for {2|%s} (expires {3|%s})
commands.mod.timeout.response.check                 = User `{0|%s}` ({1|%s}) is timed out for another {2|%s} (expires {3|%s}) by `{4|%s}` ({5|%s})
commands.mod.timeout.response.check.not_found       = User `{0|%s}` ({1|%s}) is not timed out
commands.mod.timeout.response.invalid               = Please check your format: `[commands.mod.timeout.arguments]`

commands.mod.stoptimeout.command                    = stoptimeout
commands.mod.stoptimeout.help                       = **REQUIRES PERMISSIONS** Ends the user's timeout before it has expired
commands.mod.stoptimeout.detailed_help              = Removes the user from the Jail role
commands.mod.stoptimeout.arguments                  = <at-mention>|<user-id>
commands.mod.stoptimeout.response                   = Timeout for user `{0|%s}` ({1|%s}) has been cancelled
commands.mod.stoptimeout.response.not_found         = User `{0|%s}` ({1|%s}) was not timed out by this bot, but the timeout role (if present) was removed

commands.mod.settimeoutrole.command                 = settimeoutrole
commands.mod.settimeoutrole.help                    = **REQUIRES PERMISSIONS** Sets the timeout role
commands.mod.settimeoutrole.detailed_help           = Sets the role to use as the timeout role, by role ID
commands.mod.settimeoutrole.arguments               = <role-id>
commands.mod.settimeoutrole.response                = `{0|%s}` ({1|%s}) set as timeout role
commands.mod.settimeoutrole.response.not_found      = Role ID `{0|%s}` does not exist
commands.mod.settimeoutrole.response.missing        = Please specify a role ID

listener.mod.timeout.on_evasion                     = Nice try, <@{0|%s}>. You are timed out for another {1|%s} (expires {2|%s}) still
listener.mod.timeout.on_evasion.add                 = Nice try, <@{0|%s}>. Your timeout has been increased by {1|%s} (now expires {2|%s}) for your evasion attempt

message.mod.timeout.expire                          = Your timeout has expired, <@{0|%s}>
message.mod.timeout.expire.not_found                = Timeout for `{0|%s}` ({1|%s}) expired (currently not a member of the server)
message.mod.timeout.not_configured                  = This server has not yet been configured with a timeout role. Please set it with [commands.mod.settimeoutrole.command]
message.mod.timeout.bad_role                        = The role specified for this server (ID `{0|%s}`) does not exist. Please set a valid role with [commands.mod.settimeoutrole.command]

####### Admin Commands #######

# Start bot
commands.admin.start.command                        = start
commands.admin.start.help                           = Start the bot
commands.admin.start.detailed_help                  = Allows the bot to process all active commands
commands.admin.start.arguments                      = <none>
commands.admin.start.response.ok                    = Bot started
commands.admin.start.response.already_started       = Bot is already running

# Stop bot
commands.admin.stop.command                         = stop
commands.admin.stop.help                            = Stop the bot
commands.admin.stop.detailed_help                   = Prevents the bot from responding to commands except for commands that ignore this setting
commands.admin.stop.arguments                       = <none>
commands.admin.stop.response.ok                     = Bot stopped
commands.admin.stop.response.already_stopped        = Bot is already stopped

# Status
commands.admin.status.command                       = status
commands.admin.status.help                          = Show bot status information
commands.admin.status.detailed_help                 = Shows various pieces of information about the bot's current state. Servers that the bot has joined can be listed by specifying `[commands.admin.status.subcommand.servers]`
commands.admin.status.arguments                     = \\\\\\[commands.admin.status.subcommand.servers]
commands.admin.status.subcommand.servers            = server
commands.admin.status.response.format               = **Status:** {0|%s}\n**Servers:** {1|%s}\n**Uptime:** {2|%s}\n**Heap:** `{3|%s}`\n**Load:** {4|%.4f}\n**Hamster Wheels in use:** {5|%s}
commands.admin.status.response.state.running        = Running
commands.admin.status.response.state.stopped        = Stopped
commands.admin.status.response.servers.entry        = `{0|%s}`: {1|%s}
commands.admin.status.response.servers.format       = {0|%d} servers:\n{1|%s}
commands.admin.status.response.memory.format        = {0|%,d}MB used {1|%,d}MB committed {2|%,d}MB max

# Kill
commands.admin.kill.command                         = kill
commands.admin.kill.help                            = Kill the bot
commands.admin.kill.detailed_help                   = Ends the JVM process that the bot is running on gracefully
commands.admin.kill.arguments                       = <none>
commands.admin.kill.response                        = Sudoku time, bye

# Restart
commands.admin.restart.command                      = restart
commands.admin.restart.help                         = Restart the bot
commands.admin.restart.detailed_help                = Signals the wrapper to start the application after the JVM exits gracefully
commands.admin.restart.arguments                    = <none>
commands.admin.restart.response                     = Brb quick sudoku game

# Blacklist
commands.admin.blacklist.command                    = blacklist
commands.admin.blacklist.help                       = Adds the provided user to the blacklist, or if none specified, lists blacklisted users
commands.admin.blacklist.detailed_help              = Blacklists the provided user, or lists blacklisted users if no user is provided. [commands.common.support_mention_front_match]
commands.admin.blacklist.arguments                  = \\\\\\[<at-mention>|<username>|<start-of-username>|<user-id>]
commands.admin.blacklist.response.not_found         = Unable to find user
commands.admin.blacklist.response.admin             = Cannot blacklist a bot administrator
commands.admin.blacklist.response.format            = `{0|%s}` has been blacklisted
commands.admin.blacklist.response.list.none         = None
commands.admin.blacklist.response.list.format       = Blacklisted users: `{0|%s}`

# Pardon
commands.admin.pardon.command                       = pardon
commands.admin.pardon.help                          = Pardons the provided user from the blacklist.
commands.admin.pardon.detailed_help                 = Pardons (removes) the provided user from the blacklist. [commands.common.support_mention_front_match]
commands.admin.pardon.arguments                     = \\\\\\[<at-mention>|<username>|<start-of-username>|<user-id>]
commands.admin.pardon.response.no_user              = Please specify a username
commands.admin.pardon.response.not_found            = Unable to find user
commands.admin.pardon.response.format               = `{0|%s}` has been pardoned
commands.admin.pardon.response.not_blacklisted      = `{0|%s}` was not blacklisted

# Join
commands.admin.join.command                         = join
commands.admin.join.help                            = Attempt to join a server using a discord.gg invite link
commands.admin.join.detailed_help                   = Bot will attempt to join using the provided discord.gg invite link
commands.admin.join.arguments                       = <http-discord.gg-invite-link>
commands.admin.join.response.invalid                = Invalid invite link
commands.admin.join.response.http_error             = Unable to join server: HTTP {0|%d}
commands.admin.join.response.network_error          = Unable to join server: Network error

# Telegram
commands.admin.telegram.command                     = telegram
commands.admin.telegram.help                        = Sends a message to the specified channel
commands.admin.telegram.detailed_help               = Sends a simple message using the specified channel ID. Supports mentions for users that are able to be mentioned from the channel the command is being issued from
commands.admin.telegram.arguments                   = <target-channel-id> <message content>
commands.admin.telegram.response.invalid            = Please specify a channelID and message: telegram CHANNEL_ID MESSAGE

# Raw
commands.admin.raw.command                          = raw
commands.admin.raw.help                             = Sends a raw JSON message
commands.admin.raw.detailed_help                    = Send a Message defined using a JSON string. You may optionally specify a target channel ID, similar to the `[commands.admin.telegram.command]` command
commands.admin.raw.arguments                        = \\\\\\[cid=<target-channel-id>] <json-message>
commands.admin.raw.response.invalid                 = Invalid JSON

# Prefix
commands.admin.prefix.command                       = prefix
commands.admin.prefix.help                          = Get or set the main command prefix
commands.admin.prefix.detailed_help                 = Set the main command prefix to the provided string, or if no string is provided, print the current command prefix
commands.admin.prefix.arguments                     = \\\\\\[<new-command-prefix>]
commands.admin.prefix.response.get                  = Command prefix: `{0|%d}`
commands.admin.prefix.response.set                  = Command prefix set to: `{0|%d}`

# Make-me-a-sandwich
commands.admin.sandwich.command                     = [commands.general.sandwich.command]
commands.admin.sandwich.help                        = [commands.general.sandwich.help]
commands.admin.sandwich.detailed_help               = [commands.general.sandwich.detailed_help]
commands.admin.sandwich.arguments                   = \\\\\\["please"]
commands.admin.sandwich.response.magic              = [commands.general.sandwich.response.magic]
commands.admin.sandwich.response                    = Ok! Here you go: http://img.phoenixlab.co/.bot/sandwich.jpg

# eval
commands.admin.eval.command                         = eval
commands.admin.eval.help                            = Evaluates the given JavaScript code block, or a the script at the provided URL
commands.admin.eval.detailed_help                   = Attempts to evaluate a triple backtick code block of JavaScript, or if given a URL, attempts to evaluate the script at the URL
commands.admin.eval.arguments                       = <triple-backtick-code-block>|<url-to-script>
commands.admin.eval.response.exception              = ```Unable to evaluate script: {0|%s}```
commands.admin.eval.response.http_error             = ```Unable to evaluate script: HTTP {0|%s}: {1|%s}```

# Now Playing
commands.admin.playing.command                     = playing
commands.admin.playing.help                        = Updates the bot's Now Playing status
commands.admin.playing.detailed_help               = Updates the Now Playing status text in the member list for the bot. Leave blank to clear it
commands.admin.playing.arguments                   = \\\\\\[<text-to-show>]

